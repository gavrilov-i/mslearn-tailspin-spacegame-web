# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- "*"

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'

schedules:
- cron: '0 10 * * *'
  displayName: 'Deploy every day at 10 A.M. UTC'
  branches:
    include:
    - release
  always: false 

stages:
- stage: 'Build'
  displayName: 'Building Application'
  jobs:
  - job: 'Build'
    displayName: 'Build Job'

    pool:
      name: LOCAL
      demands:
        - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  
    steps:

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: npx node-sass $(wwwrootDir) --output $(wwwrootDir)
      displayName: 'Sass'

    - task: gulp@1
      displayName: 'Gulp run'

    - script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
      displayName: 'Buildinfo creation'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        vstsFeed: 'Tailspin.SpaceGame.Web.Models'
        projects: '**/*.csproj'

    - template: templates/build.yml
      parameters:
        buildConfiguration: $(buildConfiguration)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()

- stage: 'Dev'
  displayName: 'Deploy the dev env'
  dependsOn: Build
  condition: |
    and (
    succeeded(),
    eq(variables['Build.SourceBranchName'], variables['releaseBranchName']))
  jobs:
  - deployment: Deploy
    pool:
      name: LOCAL
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: |
                **/*.zip
                !**/*.Tests.zip
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'ARM-Tailspin'
              appName: '$(WebAppNameDev)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'

- stage: 'Test'
  displayName: 'Deploy the QA env'
  dependsOn: Dev
  condition: |
    and (
    succeeded(),
    eq(variables['Build.Reason'],'Schedule'))
  jobs:
  - deployment: Deploy
    pool:
      name: LOCAL
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            patterns: |
                **/*.zip
                !**/*.Tests.zip
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website to Test env'
            inputs:
              azureSubscription: 'ARM-Tailspin'
              appName: '$(WebAppNameTest)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'